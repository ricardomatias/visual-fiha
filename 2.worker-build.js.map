{"version":3,"sources":["webpack:///./signal/collection.js","webpack:///./signal/beat/state.js","webpack:///./signal/hsla/state.js","webpack:///./signal/rgba/state.js","webpack:///./signal/state.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;AC9BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,2B;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,CAAC;;AAED,iC;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,CAAC;AACD,iC;;;;;;;;AClDA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,6CAA6C,UAAU,EAAE;AACzD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA","file":"2.worker-build.js","sourcesContent":["'use strict';\nvar assign = require('lodash.assign');\nvar Collection = require('ampersand-collection');\nvar SignalState = require('./state');\nrequire('./beat/state');\nrequire('./hsla/state');\nrequire('./rgba/state');\n\nvar SignalCollection = Collection.extend({\n  mainIndex: 'name',\n  model: function(attrs, opts) {\n    var Constructor = SignalState.types[attrs.type] || SignalState;\n    var state = new Constructor(attrs, opts);\n    return state;\n  },\n\n  toJSON: function () {\n    return this.map(function (model) {\n      if (model.toJSON) {\n        return model.toJSON();\n      }\n      else {\n        var out = {};\n        assign(out, model);\n        delete out.collection;\n        return out;\n      }\n    });\n  }\n});\nmodule.exports = SignalCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./signal/collection.js\n// module id = 3\n// module chunks = 2","'use strict';\nvar SignalState = require('./../state');\n\nvar BeatState = SignalState.types.beat = SignalState.extend({\n  initialize: function() {\n    SignalState.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.collection, 'frametime', function(frametime) {\n      this.frametime = frametime;\n    });\n  },\n\n  session: {\n    frametime: ['number', true, 0]\n  },\n\n  mappable: {\n    source: ['result', 'timeBetweenBeats', 'beatNum'],\n    target: ['input']\n  },\n\n  derived: {\n    result: {\n      deps: ['timeBetweenBeats', 'frametime'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    },\n    beatNum: {\n      deps: ['timeBetweenBeats', 'frametime'],\n      fn: function() {\n        return this.frametime ? Math.floor(this.frametime / this.timeBetweenBeats) : 0;\n      }\n    },\n    timeBetweenBeats: {\n      deps: ['input'],\n      fn: function() {\n        return (60 * 1000) / Math.max(this.input, 1);\n      }\n    }\n  },\n\n  computeSignal: function() {\n    var ft = this.frametime;\n    var tbb = this.timeBetweenBeats;\n    return !ft ? 0 : (100 - (((ft % tbb) / tbb) * 100));\n  }\n});\n\nmodule.exports = BeatState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./signal/beat/state.js\n// module id = 569\n// module chunks = 2","'use strict';\nvar SignalState = require('./../state');\n\nvar _360 = {\n  type: 'number',\n  required: true,\n  default: 180,\n  min: 0,\n  max: 360\n};\nvar _100 = {\n  type: 'number',\n  required: true,\n  default: 100,\n  min: 0,\n  max: 100\n};\n\nvar HSLASignalState = SignalState.types.hsla = SignalState.extend({\n  props: {\n    hue: _360,\n    saturation: _100,\n    lightness: _100,\n    alpha: _100\n  },\n\n  mappable: {\n    source: ['result', 'hue', 'saturation', 'lightness', 'alpha'],\n    target: ['hue', 'saturation', 'lightness', 'alpha']\n  },\n\n  derived: {\n    result: {\n      deps: ['hue', 'saturation', 'lightness', 'alpha'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n  // parseInput: function() {\n  //   var values = _colorValues(this.input);\n  //   return {\n  //     hue: values[0],\n  //     saturation: values[1],\n  //     lightness: values[2],\n  //     alpha: values[3]\n  //   };\n  // },\n  computeSignal: function() {\n    return 'hsla(' + Math.round(this.hue) + ',' + Math.round(this.saturation) + '%,' + Math.round(this.lightness) + '%,' + (Math.round(this.alpha) / 100) + ')';\n  }\n});\n\nmodule.exports = HSLASignalState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./signal/hsla/state.js\n// module id = 570\n// module chunks = 2","'use strict';\nvar SignalState = require('./../state');\nvar _255 = {\n  type: 'number',\n  required: true,\n  default: 180,\n  min: 0,\n  max: 255\n};\nvar _100 = {\n  type: 'number',\n  required: true,\n  default: 100,\n  min: 0,\n  max: 100\n};\nvar RGBASignalState = SignalState.types.rgba = SignalState.extend({\n  props: {\n    red: _255,\n    green: _255,\n    blue: _255,\n    alpha: _100\n  },\n\n  mappable: {\n    source: ['result', 'red', 'green', 'blue', 'alpha'],\n    target: ['red', 'green', 'blue', 'alpha']\n  },\n\n  derived: {\n    result: {\n      deps: ['red', 'green', 'blue', 'alpha'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n  // parseInput: function() {\n  //   var values = _colorValues(this.input);\n  //   return {\n  //     red: values[0],\n  //     green: values[1],\n  //     blue: values[2],\n  //     alpha: values[3]\n  //   };\n  // },\n  computeSignal: function() {\n    return 'rgba(' + Math.round(this.red) + ',' + Math.round(this.green) + ',' + Math.round(this.blue) + ',' + (Math.round(this.alpha) / 100) + ')';\n  }\n});\nmodule.exports = RGBASignalState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./signal/rgba/state.js\n// module id = 571\n// module chunks = 2","'use strict';\nvar State = require('ampersand-state');\n\nvar SignalState = State.extend({\n  idAttribute: 'name',\n  typeAttribute: 'type',\n\n  mappable: {\n    source: ['result'],\n    target: ['input']\n  },\n\n  props: {\n    name: ['string', true, null],\n    type: ['string', true, 'default'],\n    defaultValue: ['any', true, function () { return 1; }],\n    input: ['any', false, null]\n  },\n\n  derived: {\n    modelPath: {\n      deps: ['name'],\n      fn: function() {\n        return 'signals.' + this.name;\n      }\n    },\n    result: {\n      deps: ['input', 'transformations'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n\n  computeSignal: function(val) {\n    val = val || this.input;\n    return val;\n  }\n});\n\nSignalState.types = {};\n\nmodule.exports = SignalState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./signal/state.js\n// module id = 86\n// module chunks = 2"],"sourceRoot":""}